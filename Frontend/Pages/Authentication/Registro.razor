@page "/registro"
@using Shared.DTOs.Usuarios
@inject AuthenticationService _authenticationService
@inject NavigationManager _navigation

<PageTitle>Registro</PageTitle>

<div class="form-container">
    <h2>Registro</h2>

    <EditForm Model="usuario" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText id="FirstName" class="form-control" @bind-Value="usuario.FirstName" />
        </div>

        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText id="LastName" class="form-control" @bind-Value="usuario.LastName" />
        </div>

        <div class="form-group">
            <label for="DNI">DNI</label>
            <InputText id="dni" class="form-control" @bind-Value="usuario.Dni" />
        </div>

        <div class="form-group">
            <label for="Email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="usuario.Email" />
        </div>

        <div class="form-group">
            <label for="Password">Password</label>
            <InputText id="password" class="form-control" type="password" @bind-Value="usuario.Password" />
        </div>

        <div class="form-group">
            <label for="ConfirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" class="form-control" type="password" @bind-Value="usuario.ConfirmPassword" />
        </div>

        <button type="submit" class="btn btn-primary">Registrar</button>
    </EditForm>

    <p>¿Ya tienes una cuenta? <NavLink href="/login">Ingresar</NavLink></p>
</div>

@code {
    private UsuarioDTO usuario = new UsuarioDTO();

    private async Task HandleRegister()
    {
        var result = await _authenticationService.RegisterAsync(usuario);

        if (result.IsSuccess)
        {

            _navigation.NavigateTo("/registro/exitoso");
        }
        else
        {
            _navigation.NavigateTo("/registro/fallido");
        }
    }
}
